@page "/register"
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js

<h3>Register</h3>


<EditForm Model="@dto" OnValidSubmit="@RegisterUser" >
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Username:</label>
        <div>
            <InputText @bind-Value="@dto.Username" />
            <ValidationMessage For="@(() => dto.Username)" />
        </div>
    </div>
    <div class="form-group ">
        <label>Password:</label>
        <div>
            <InputText @bind-Value="@dto.Password" />
            <ValidationMessage For="@(() => dto.Password)" />
        </div>
    </div>

    <div class="form-group ">
        <label>Confirm Password:</label>
        <div>
            <InputText @bind-Value="@dto.ConfirmPassword" />
            <ValidationMessage For="@(() => dto.ConfirmPassword)" />
        </div>
    </div>

    <div class="form-group ">
        <label>Name:</label>
        <div>
            <InputText @bind-Value="@dto.Name" />
            <ValidationMessage For="@(() => dto.Name)" />
        </div>
    </div>

    <div class="form-group ">
        <label>Surname:</label>
        <div>
            <InputText @bind-Value="@dto.Surname" />
            <ValidationMessage For="@(() => dto.Surname)" />
        </div>
    </div>

    <div class="form-group ">
        <label>Birthday:</label>
        <div>
            <InputDate @bind-Value="@dto.Birthday" />
            <ValidationMessage For="@(() => dto.Birthday)" />
        </div>
    </div>

    <div class="form-group ">
        <label>Phone Number:</label>
        <div>
            <InputText @bind-Value="@dto.PhoneNumber" />
            <ValidationMessage For="@(() => dto.PhoneNumber)" />
        </div>
    </div>

    <div class="form-group ">
        <label>Email:</label>
        <div>
            <InputText @bind-Value="@dto.Email" />
            <ValidationMessage For="@(() => dto.Email)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success">
        @ButtonText
    </button>
</EditForm>

@code {
    private RegisterUserDto dto { get; set; } = new RegisterUserDto();

    private string controllerRoute = "api/user";

    public string ButtonText { get; set; } = "Register";

    private async Task RegisterUser()
    {
        var response = await http.PostAsJsonAsync($"{controllerRoute}/register", dto);

        if(response.StatusCode == System.Net.HttpStatusCode.OK)
        {
            await js.InvokeVoidAsync("alert", $"Registration successful!");
            uriHelper.NavigateTo("");
        }
        else
        {
            await js.InvokeVoidAsync("alert", $"Registration failed!");
        }
    }
}
