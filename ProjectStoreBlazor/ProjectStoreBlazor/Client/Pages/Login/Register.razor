@page "/register"
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js



<div class="d-flex justify-content-around">
    <div class="card" style="min-width: 30%">
        <div class="card-header">
            <ul class="nav nav-tabs card-header-tabs">
                <li class="nav-item">
                    <NavLink class="nav-link" href="register">
                        <b>Register</b>
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="login">
                        Login
                    </NavLink>
                </li>
            </ul>
        </div>
        <div class="card-body p-3">
            <div class="pl-5 pr-5">
                <RegisterForm OnValidSubmit=@RegisterUser Dto=@Dto />
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterUserDto Dto { get; set; } = new RegisterUserDto();

    private string controllerRoute = "api/user";

    public string ButtonText { get; set; } = "Register";

    private async Task RegisterUser()
    {
        var response = await http.PostAsJsonAsync($"{controllerRoute}/register", Dto);

        if (response.StatusCode == System.Net.HttpStatusCode.OK)
        {
            await js.InvokeVoidAsync("alert", $"Registration successful!");
            uriHelper.NavigateTo("");
        }
        else
        {
            await js.InvokeVoidAsync("alert", $"Registration failed!");
        }
    }
}
